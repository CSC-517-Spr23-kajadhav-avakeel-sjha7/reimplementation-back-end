---
openapi: 3.0.1
info:
  title: EXPERTIZA API V1
  version: v1
paths:
  "/api/v1/account_requests":
    get:
      summary: List Account Requests
      parameters:
      - name: history
        in: query
        type: boolean
        description: Show previosuly approved or rejected account requests
        required: true
        schema:
          type: boolean
          default: false
          enum:
          - true
          - false
      tags:
      - Account Requests
      responses:
        '200':
          description: successful
    post:
      summary: Create Account Request
      tags:
      - Account Requests
      parameters: []
      responses:
        '201':
          description: Created an Account Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                fullname:
                  type: string
                email:
                  type: string
                self_introduction:
                  type: string
                role_id:
                  type: integer
                institution_id:
                  type: integer
              required:
              - name
              - fullname
              - email
              - self_introduction
              - role_id
              - institution_id
  "/api/v1/account_requests/{id}":
    parameters:
    - name: id
      in: path
      description: id of the Account Request
      required: true
      schema:
        type: integer
    get:
      summary: Show Account Request
      tags:
      - Account Requests
      responses:
        '200':
          description: successful
    patch:
      summary: Update Account Request
      tags:
      - Account Requests
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                fullname:
                  type: string
                email:
                  type: string
                self_introduction:
                  type: string
                role_id:
                  type: integer
                institution_id:
                  type: integer
                status:
                  type: string
                  example: Approved
              required:
              - name
              - fullname
              - email
              - self_introduction
              - role_id
              - institution_id
              - status
    put:
      summary: Update Account Request
      tags:
      - Account Requests
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                fullname:
                  type: string
                email:
                  type: string
                self_introduction:
                  type: string
                role_id:
                  type: integer
                institution_id:
                  type: integer
                status:
                  type: string
                  example: Approved
              required:
              - name
              - fullname
              - email
              - self_introduction
              - role_id
              - institution_id
              - status
    delete:
      summary: Delete Account Request
      tags:
      - Account Requests
      responses:
        '200':
          description: successful
  "/api/v1/institutions":
    get:
      summary: list institutions
      tags:
      - Institutions
      responses:
        '200':
          description: successful
    post:
      summary: create institution
      tags:
      - Institutions
      parameters: []
      responses:
        '201':
          description: Created a institution
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/api/v1/institutions/{id}":
    parameters:
    - name: id
      in: path
      description: id of the institution
      required: true
      schema:
        type: integer
    get:
      summary: show institution
      tags:
      - Institutions
      responses:
        '200':
          description: successful
    patch:
      summary: update institution
      tags:
      - Institutions
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
    put:
      summary: update institution
      tags:
      - Institutions
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
    delete:
      summary: delete institution
      tags:
      - Institutions
      responses:
        '200':
          description: successful
  "/api/v1/roles":
    get:
      summary: list roles
      tags:
      - Roles
      responses:
        '200':
          description: successful
    post:
      summary: create role
      tags:
      - Roles
      parameters: []
      responses:
        '201':
          description: Created a role
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                parent_id:
                  type: integer
                default_page_id:
                  type: integer
              required:
              - name
  "/api/v1/roles/{id}":
    parameters:
    - name: id
      in: path
      description: id of the role
      required: true
      schema:
        type: integer
    get:
      summary: show role
      tags:
      - Roles
      responses:
        '200':
          description: successful
    patch:
      summary: update role
      tags:
      - Roles
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                parent_id:
                  type: integer
                default_page_id:
                  type: integer
              required:
              - name
    put:
      summary: update role
      tags:
      - Roles
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                parent_id:
                  type: integer
                default_page_id:
                  type: integer
              required:
              - name
    delete:
      summary: delete role
      tags:
      - Roles
      responses:
        '204':
          description: successful
  "/api/v1/users":
    get:
      summary: List Users
      tags:
      - Users
      responses:
        '200':
          description: successful
    post:
      summary: Create User and Log In with it
      tags:
      - Users
      parameters:
      - name: role
        in: query
        type: string
        description: Role of the User
        required: true
        schema:
          type: string
          default: Student
          enum:
          - Student
          - Instructor
          - Administrator
          - Super-Administrator
          - Unregistered user
          - Teaching Assistant
      responses:
        '201':
          description: Created a user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                fullname:
                  type: string
                email:
                  type: string
              required:
              - name
              - fullname
              - email
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: 127.0.0.1:3000
